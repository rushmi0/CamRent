-- [ People Table ]
CREATE TABLE IF NOT EXISTS People
(
    PersonID    INTEGER PRIMARY KEY AUTOINCREMENT,
    FirstName   TEXT UNIQUE                                                       NOT NULL,
    LastName    TEXT UNIQUE                                                       NOT NULL,
    Email       TEXT UNIQUE CHECK (Email LIKE '%_@__%.__%' OR Email LIKE '%@%.%') NOT NULL,
    PhoneNumber TEXT UNIQUE                                                       NOT NULL,
    AddressID   INTEGER UNIQUE,
    FOREIGN KEY (AddressID) REFERENCES Address (AddressID)
);

-- [ Customers Table ]
CREATE TABLE IF NOT EXISTS Customers
(
    CustomerID        INTEGER PRIMARY KEY AUTOINCREMENT,
    UserName          TEXT           NOT NULL UNIQUE,
    ProfileImage      TEXT     DEFAULT 'N/A',
    AuthKey           TEXT           NOT NULL,
    TimeStamp         DATETIME DEFAULT 'N/A',
    CreateAccountDate DATETIME DEFAULT 'N/A',
    PersonID          INTEGER UNIQUE NOT NULL,
    FOREIGN KEY (PersonID) REFERENCES People (PersonID)
);

-- [ Stores Table ]
CREATE TABLE IF NOT EXISTS Stores
(
    StoreID           INTEGER PRIMARY KEY AUTOINCREMENT,
    StoreName         TEXT           NOT NULL UNIQUE,
    ProfileImage      TEXT     DEFAULT 'N/A',
    PaymentMethod     TEXT     DEFAULT 'N/A',
    AuthKey           TEXT     DEFAULT 'N/A',
    TimeStamp         DATETIME DEFAULT 'N/A',
    CreateAccountDate DATETIME DEFAULT 'N/A',
    PersonID          INTEGER UNIQUE NOT NULL,
    FOREIGN KEY (PersonID) REFERENCES People (PersonID)
);

-- [ Address Table ]
CREATE TABLE IF NOT EXISTS Address
(
    AddressID    INTEGER PRIMARY KEY AUTOINCREMENT,
    LocationName TEXT NOT NULL,
    City         TEXT NOT NULL,
    Province     TEXT NOT NULL,
    PostalNumber TEXT NOT NULL,
    StreetName   TEXT NOT NULL
);

-- [ CreditScore Table ]
CREATE TABLE IF NOT EXISTS CreditScore
(
    ScoreID    INTEGER PRIMARY KEY AUTOINCREMENT,
    Score      INTEGER DEFAULT 0,
    StoreID    INTEGER,
    CustomerID INTEGER,
    FOREIGN KEY (StoreID) REFERENCES Stores (StoreID),
    FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)
);

-- [ OrderContract Table ]
CREATE TABLE IF NOT EXISTS OrderContract
(
    OrderID    INTEGER PRIMARY KEY AUTOINCREMENT,
    Quantity   INTEGER DEFAULT 0,
    Duration   INTEGER DEFAULT 0,
    CustomerID INTEGER,
    AddressID  INTEGER,
    ProductID  INTEGER,
    FOREIGN KEY (ProductID) REFERENCES Products (ProductID),
    FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID),
    FOREIGN KEY (AddressID) REFERENCES Address (AddressID)
);

-- [ Transactions Table ]
CREATE TABLE IF NOT EXISTS Transactions
(
    TxID       INTEGER PRIMARY KEY AUTOINCREMENT,
    TotalPrice INTEGER NOT NULL,
    Status     TEXT     DEFAULT 'Pending', -- 'Pending'  / 'Confirmed'
    TimeStamp  DATETIME DEFAULT 'N/A',
    Date       DATETIME DEFAULT 'N/A',
    OrderID    INTEGER,
    FOREIGN KEY (OrderID) REFERENCES OrderContract (OrderID)
);

-- [ Products Table ]
CREATE TABLE IF NOT EXISTS Products
(
    ProductID   INTEGER PRIMARY KEY AUTOINCREMENT,
    ProductName TEXT NOT NULL,
    Image1      TEXT          DEFAULT 'N/A',
    Image2      TEXT          DEFAULT 'N/A',
    Image3      TEXT          DEFAULT 'N/A',
    Image4      TEXT          DEFAULT 'N/A',
    Type        TEXT          DEFAULT 'N/A',
    Price       INTEGER       DEFAULT 0,
    SpecDetail  TEXT          DEFAULT 'N/A',
    Description TEXT          DEFAULT 'N/A',
    Status      TEXT NOT NULL DEFAULT ' Unavailable',
    StoreID     INTEGER,
    FOREIGN KEY (StoreID) REFERENCES Stores (StoreID)
);

-- [ FineTable ]
CREATE TABLE IF NOT EXISTS Fine
(
    FineID      INTEGER PRIMARY KEY AUTOINCREMENT,
    TimeStamp   DATETIME      DEFAULT 'N/A',
    Date        DATETIME      DEFAULT 'N/A',
    Description TEXT          DEFAULT 'N/A',
    Image1      TEXT          DEFAULT 'N/A',
    Image2      TEXT          DEFAULT 'N/A',
    Image3      TEXT          DEFAULT 'N/A',
    Image4      TEXT          DEFAULT 'N/A',
    PenaltyFee  INTEGER       DEFAULT 0,
    Status      TEXT NOT NULL DEFAULT 'Pending',
    StoreID     INTEGER,
    ProductID   INTEGER,
    CustomerID  INTEGER,
    FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID),
    FOREIGN KEY (StoreID) REFERENCES Stores (StoreID),
    FOREIGN KEY (ProductID) REFERENCES Products (ProductID)
);



SELECT name
FROM sqlite_master
WHERE type = 'table';


-- [ คำสั่งลบตาราง ]
DROP TABLE IF EXISTS People;
DROP TABLE IF EXISTS Customers;
DROP TABLE IF EXISTS Stores;
DROP TABLE IF EXISTS Address;
DROP TABLE IF EXISTS CreditScore;
DROP TABLE IF EXISTS OrderContract;
DROP TABLE IF EXISTS Transactions;
DROP TABLE IF EXISTS Products;
DROP TABLE IF EXISTS Fine;



SELECT *
FROM Customers
ORDER BY CAST(SUBSTR(CustomerID, 5) AS INTEGER);


UPDATE Customers
SET ProfileImage = 'image.jpg'
WHERE CustomerID = 1;


