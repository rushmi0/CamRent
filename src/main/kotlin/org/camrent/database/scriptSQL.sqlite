-- [ People Table ]
CREATE TABLE IF NOT EXISTS People
(
    PersonID    INTEGER PRIMARY KEY AUTOINCREMENT,
    FirstName   TEXT UNIQUE DEFAULT 'N/A',
    LastName    TEXT UNIQUE DEFAULT 'N/A',
    Email       TEXT UNIQUE DEFAULT 'N/A',
    PhoneNumber TEXT UNIQUE DEFAULT 'N/A',
    AddressID   INTEGER,

    FOREIGN KEY (AddressID) REFERENCES Address (AddressID)
);

-- [ Customers Table ]
CREATE TABLE IF NOT EXISTS Customers
(
    CustomerID        INTEGER PRIMARY KEY AUTOINCREMENT,
    UserName          TEXT NOT NULL UNIQUE,
    ProfileImage      TEXT     DEFAULT 'N/A',
    AuthKey           TEXT     DEFAULT 'N/A',
    TimeStamp         DATETIME DEFAULT 'N/A',
    CreateAccountDate DATETIME DEFAULT 'N/A',
    PersonID          INTEGER,

    FOREIGN KEY (PersonID) REFERENCES People (PersonID)
);

-- [ Stores Table ]
CREATE TABLE IF NOT EXISTS Stores
(
    StoreID           INTEGER PRIMARY KEY AUTOINCREMENT,
    StoreName         TEXT NOT NULL UNIQUE,
    ProfileImage      TEXT     DEFAULT 'N/A',
    PaymentMethod     TEXT     DEFAULT 'Lightining Network',
    AuthKey           TEXT     DEFAULT 'N/A',
    TimeStamp         DATETIME DEFAULT 'N/A',
    CreateAccountDate DATETIME DEFAULT 'N/A',
    PersonID          INTEGER,

    FOREIGN KEY (PersonID) REFERENCES People (PersonID)
);

-- [ Address Table ]
CREATE TABLE IF NOT EXISTS Address
(
    AddressID    INTEGER PRIMARY KEY AUTOINCREMENT,
    LocationName TEXT NOT NULL DEFAULT 'N/A',
    City         TEXT NOT NULL DEFAULT 'N/A',
    Province     TEXT NOT NULL DEFAULT 'N/A',
    PostalNumber TEXT NOT NULL DEFAULT 'N/A',
    StreetName   TEXT NOT NULL DEFAULT 'N/A'
);

-- [ CreditScore Table ]
CREATE TABLE IF NOT EXISTS CreditScore
(
    ScoreID    INTEGER PRIMARY KEY AUTOINCREMENT,
    Score      INTEGER DEFAULT 0,
    StoreID    INTEGER,
    CustomerID INTEGER,

    FOREIGN KEY (StoreID) REFERENCES Stores (StoreID),
    FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)
);

-- [ OrderContract Table ]
CREATE TABLE IF NOT EXISTS OrderContract
(
    OrderID    INTEGER PRIMARY KEY AUTOINCREMENT,
    Quantity   INTEGER DEFAULT 0,
    Duration   TEXT    DEFAULT 'N/A',
    CustomerID INTEGER,
    AddressID  INTEGER,
    ProductID  INTEGER,

    FOREIGN KEY (ProductID) REFERENCES Products (ProductID),
    FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID),
    FOREIGN KEY (AddressID) REFERENCES Address (AddressID)
);

-- [ Transactions Table ]
CREATE TABLE IF NOT EXISTS Transactions
(
    TxID       INTEGER PRIMARY KEY AUTOINCREMENT,
    TotalPrice INTEGER NOT NULL DEFAULT 0,
    Status     TEXT             DEFAULT 'Pending', -- 'Pending'  / 'Confirmed'
    TimeStamp  DATETIME         DEFAULT 'N/A',
    Date       DATETIME         DEFAULT 'N/A',
    OrderID    INTEGER,

    FOREIGN KEY (OrderID) REFERENCES OrderContract (OrderID)
);

-- [ Products Table ]
CREATE TABLE IF NOT EXISTS Products
(
    ProductID   INTEGER PRIMARY KEY AUTOINCREMENT,
    ProductName TEXT NOT NULL,
    Image1      TEXT          DEFAULT 'N/A',
    Image2      TEXT          DEFAULT 'N/A',
    Image3      TEXT          DEFAULT 'N/A',
    Image4      TEXT          DEFAULT 'N/A',
    Type        TEXT          DEFAULT 'N/A',
    Price       INTEGER       DEFAULT 0,
    SpecDetail  TEXT          DEFAULT 'N/A',
    Description TEXT          DEFAULT 'N/A',
    Status      TEXT NOT NULL DEFAULT ' Unavailable',
    StoreID     INTEGER,

    FOREIGN KEY (StoreID) REFERENCES Stores (StoreID)
);

-- [ FineTable ]
CREATE TABLE IF NOT EXISTS Fine
(
    FineID      INTEGER PRIMARY KEY AUTOINCREMENT,
    Description TEXT          DEFAULT 'N/A',
    Image1      TEXT          DEFAULT 'N/A',
    Image2      TEXT          DEFAULT 'N/A',
    Image3      TEXT          DEFAULT 'N/A',
    Image4      TEXT          DEFAULT 'N/A',
    PenaltyFee  INTEGER       DEFAULT 0,
    TimeStamp   DATETIME      DEFAULT 'N/A',
    Date        DATETIME      DEFAULT 'N/A',
    Status      TEXT NOT NULL DEFAULT 'Pending',
    StoreID     INTEGER,
    ProductID   INTEGER,
    CustomerID  INTEGER,

    FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID),
    FOREIGN KEY (StoreID) REFERENCES Stores (StoreID),
    FOREIGN KEY (ProductID) REFERENCES Products (ProductID)
);



SELECT name
FROM sqlite_master
WHERE type = 'table';

SELECT *
FROM Customers;
SELECT *
FROM People;
SELECT *
FROM Address;

-- DELETE FROM Customers
-- WHERE CustomerID = 1;
--
-- DELETE FROM People
-- WHERE PersonID = 1;
--
-- DELETE FROM Address
-- WHERE AddressID = 1;


-- [ คำสั่งลบตาราง ]
-- DROP TABLE IF EXISTS People;
-- DROP TABLE IF EXISTS Customers;
-- DROP TABLE IF EXISTS Stores;
-- DROP TABLE IF EXISTS Address;
-- DROP TABLE IF EXISTS CreditScore;
-- DROP TABLE IF EXISTS OrderContract;
-- DROP TABLE IF EXISTS Transactions;
-- DROP TABLE IF EXISTS Products;
-- DROP TABLE IF EXISTS Fine;


SELECT *
FROM Customers
ORDER BY CAST(SUBSTR(CustomerID, 5) AS INTEGER);


UPDATE Customers
SET ProfileImage = 'image.jpg'
WHERE CustomerID = 1;
